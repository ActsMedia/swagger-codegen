{{#operations}}//
// {{classname}}.swift
// API Version {{appVersion}}
//

import AMNetworkingStack

class {{classname}}<Provider: NetworkingProvider> {
{{#operation}}

    /**{{#summary}}
     {{{summary}}}{{/summary}}
     - {{httpMethod}}: {{path}}{{#notes}}
     - {{{notes}}}{{/notes}}{{#subresourceOperation}}
     - subresourceOperation: {{subresourceOperation}}{{/subresourceOperation}}
     {{#authMethods}}- {{#isOAuth}}OAuth{{/isOAuth}}{{/authMethods}}{{#responseHeaders}}
     - responseHeaders: {{responseHeaders}}{{/responseHeaders}}{{#externalDocs}}
     - externalDocs: {{externalDocs}}{{/externalDocs}}{{#hasParams}}{{#allParams}}
     - parameter: {{paramName}}: (type: {{#isFormParam}}form{{/isFormParam}}{{#isQueryParam}}query{{/isQueryParam}}{{#isPathParam}}path{{/isPathParam}}{{#isHeaderParam}}header{{/isHeaderParam}}{{#isBodyParam}}body{{/isBodyParam}}) {{description}}{{/allParams}}{{/hasParams}}
     - returns: NetworkResult<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void{{/returnType}}> {{description}}
     */
    static func {{operationId}}(provider: Provider = .shared, with {{#hasParams}}{{#allParams}}{{paramName}}{{#secondaryParam}}{{paramName}}{{/secondaryParam}}: {{{dataType}}}{{^required}}?{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}, {{/hasParams}}completion: @escaping (Result<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Void {{/returnType}}, Error>) -> ()) {
        {{^pathParams}}let{{/pathParams}}{{#pathParams}}{{^secondaryParam}}var{{/secondaryParam}}{{/pathParams}} path = "{{path}}"{{#pathParams}}
        path = path.replacingOccurrences(of: "{{=<% %>=}}{<%paramName%>}<%={{ }}=%>", with: "\({{paramName}})", options: .literal){{/pathParams}}
        
        {{#hasBodyParam}}provider.enqueueRequest(urlExtension: path, body: {{#bodyParam}}{{paramName}}{{/bodyParam}} ,method: .fuzzyMake(from: "{{httpMethod}}") , completion: completion)
        {{/hasBodyParam}}{{^hasBodyParam}}provider.enqueueRequest(urlExtension: path, method: .fuzzyMake(from: "{{httpMethod}}") , completion: completion)
        {{/hasBodyParam}}
    }
{{/operation}}
}
{{/operations}}
